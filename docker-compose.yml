version: '3.9'

services:
  app:
    container_name: app
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - "8090:8090"
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - app_network

  postgres:
    container_name: postgres_container
    image: postgres:14.5
    command:
      - "postgres"
      - "-c"
      - "max_connections=50"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=4GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=10GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
    environment:
      PGDATA: "/var/lib/postgresql/data/pgdata"
    env_file:
      - .env
    volumes:
      - ./db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    networks:
      - app_network

  nginx:
    container_name: nginx
    image: nginx:1.23.1
    env_file:
      - .env
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "$NGINX_EXTERNAL_PORT:80"
    networks:
      - app_network


networks:
  app_network:
    driver: bridge